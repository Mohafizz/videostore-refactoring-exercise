Can be placed in TDD for test purposes.
---------------------------------------
let customer = {
  name: "martin",
  rentals: [{ movieID: "F001", days: 3 }, { movieID: "F002", days: 1 }]
};

Just records of sample movie titles.
------------------------------------
let movies = {
  F001: { title: "Ran", code: "regular" },
  F002: { title: "Trois Couleurs: Bleu", code: "regular" }
};

The one and only function!
--------------------------
function statement(customer, movies){
    ...
}

Key variables
-------------
customer, totalAmount, frequentRenterPoints, result, movie, thisAmount

Glossary
--------
r.days = rentalDuration
result = repeated, should be more specific
thisAmount = currentAmount?

Output should not change
========================
Rental Record for martin
        Ran     3.5
        Trois Couleurs: Bleu    2
Amount owed is 5.5
You earned 2 frequent renter points

class Movie {
  constructor({ id, title, code }) {
    this.id = id;
    this.title = title;
    this.code = code;
  }
}

export class ChildrenMovie extends Movie {
  constructor({ id, title }) {
    super({ id, title, code: "children" });
  }

  getBillForRental(days) {
    let bill = 1.5;
    if (days > 3) {
      bill += (days - 3) * 1.5;
    }
    return bill;
  }
}

export class NewMovie extends Movie {
  constructor({ id, title }) {
    super({ id, title, code: "new" });
  }

  getBillForRental(days) {
    return days * 3;
  }
}

export class RegularMovie extends Movie {
  constructor({ id, title }) {
    super({ id, title, code: "regular" });
  }

  getBillForRental(days) {
    let bill = 2;
    if (days > 2) {
      bill += (days - 2) * 1.5;
    }
    return bill;
  }
}

export function createMovie({ id, title, code }) {
  if (code == "new") return new NewMovie({ id, title });
  if (code == "regular") return new RegularMovie({ id, title });
  if (code == "children") return new ChildrenMovie({ id, title });
  throw new Error("Unknown movie code " + code);
}

export default Movie;

====================
class Customer {
  constructor({ name }) {
    this.name = name;
    this.frequentRenterPoints = 0;
  }
  incrementRentalPoints() {
    this.frequentRenterPoints++;
  }
}

export default Customer;